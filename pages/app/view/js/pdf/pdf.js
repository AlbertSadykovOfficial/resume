function getImage(canvas)
{
    var imageData = canvas.toDataURL();
    var image = new Image();
    image.src = imageData;
    return image;
}
 

function saveImage(image) 
{
    var link = document.createElement("a");
 
    link.setAttribute("href", image.src);
    link.setAttribute("download", "lecture_page"+String(1)+".png");
    link.click();
}


function saveCanvasAsImageFile()
{
        // Вывод банковской карты при созранении поседней страницы
        if (show_bank_card == true)
        {
                show_bank_card = false;
                show_bank_card_f();
                document.getElementById('card').setAttribute('onclick', "alert('Подождите немного, загрузка скоро начнется, а пока можешь подкинуть мне чуть-чуть на еду, буду очень рад:)')");
                setTimeout(function()
                {
                        document.getElementById('card').setAttribute('onclick', 'hide_bank_card()');
                        document.getElementById('card').style.backgroundColor='black';

                        var image = getImage(document.getElementById("myCanvas"));
                        saveImage(image);
                }, 10000);
                return true
        }

    var image = getImage(document.getElementById("myCanvas"));
    saveImage(image);
}   
function printToPDF() {
    console.log('converting...');
    var printableArea = document.body;//document.getElementById('primary');
    html2canvas(printableArea, {
        //quality: 4,
        //scale: 2,
        useCORS: true
        , onrendered: function(canvas) {

            var pdf = new jsPDF('p', 'pt', 'letter');
            var pageHeight = 980;
            var pageWidth = 900;
            for (var i = 0; i <= printableArea.clientHeight / pageHeight; i++) { var srcImg = canvas; var sX = 0; var sY = pageHeight * i; // start 1 pageHeight down for every new page 
            var sWidth = pageWidth; var sHeight = pageHeight; var dX = 0; var dY = 0; var dWidth = pageWidth; var dHeight = pageHeight; window.onePageCanvas = document.createElement("canvas"); onePageCanvas.setAttribute('width', pageWidth); onePageCanvas.setAttribute('height', pageHeight); var ctx = onePageCanvas.getContext('2d'); ctx.drawImage(srcImg, sX, sY, sWidth, sHeight, dX, dY, dWidth, dHeight); var canvasDataURL = onePageCanvas.toDataURL("image/png", 1.0); var width = onePageCanvas.width; var height = onePageCanvas.clientHeight; if (i > 0) // if we're on anything other than the first page, add another page
                    pdf.addPage(612, 791); // 8.5" x 11" in pts (inches*72)
                pdf.setPage(i + 1); // now we declare that we're working on that page
                pdf.addImage(canvasDataURL, 'PNG', 20, 40, (width * .62), (height * .62)); // add content to the page
            }
            pdf.save('test.pdf');
        }
    });
}

function printToPDF_2() {
    console.log('converting...');
    //light_mode();
    
    let projects = document.getElementById('target').children[1].children[1];
    Array.prototype.slice.call(projects.getElementsByClassName('card-footer')).map(function(elem){ elem.style.display='none';} );
    Array.prototype.slice.call(projects.getElementsByClassName('card-body')).map(function(elem){ elem.children[1].classList.remove('pt-3'); elem.children[1].classList.add(...['pt-1','pb-1']); } );
    
    reposition();

    let printableArea = document.getElementById('target');
    printableArea.style.backgroundColor = "white";
    printableArea.style.fontFeatureSettings = '"liga" 0';
    printableArea.style.fontFamily = "Segoe UI";
    Array.prototype.slice.call(printableArea.getElementsByTagName('code')).map(function(elem){ elem.style.fontFamily = 'Consolas'});
    Array.prototype.slice.call(printableArea.getElementsByTagName('card')).map(function(elem){ elem.style.backgroundColor = '#f8f9fa'});
    Array.prototype.slice.call(printableArea.querySelector('tbody>tr:nth-of-type(3)')).map(function(elem){ elem.style.backgroundColor = '#f9f9f9'});

    html2canvas(printableArea, {
        //quality: 4,
        //scale: 2,
        useCORS: true
        , onrendered: function(canvas) {
            var image = getImage(canvas);
            saveImage(image);
            var contentWidth = canvas.width;
            var contentHeight = canvas.height;
            //One page pdf shows the canvas height generated by html pages.
            var pageHeight = contentWidth / 592.28 * 841.89;
            //html page height without pdf generation
            var leftHeight = contentHeight;
            //Page offset
            var position = 0;
            //a4 paper size [595.28, 841.89], html page generated canvas in pdf picture width
            var imgWidth = 592.28;
            var imgHeight = 592.28 / contentWidth * contentHeight;
            var pageData = canvas.toDataURL('image/jpeg', 1.0);
            var pdf = new jsPDF('', 'pt', 'a4');
            //There are two heights to distinguish, one is the actual height of the html page, and the page height of the generated pdf (841.89)
            //When the content does not exceed the range of pdf page display, there is no need to paginate
            if (leftHeight < pageHeight) 
            { 
                pdf.addImage(pageData, 'JPEG', 5, 0, imgWidth, imgHeight); 
            } 
            else 
            {
                while (leftHeight > 0) 
                {
                    pdf.addImage(pageData, 'JPEG', 5, position, imgWidth, imgHeight)
                    leftHeight -= pageHeight;
                    position -= 841.89;
                    //Avoid adding blank pages
                    if (leftHeight > 0) 
                    {
                        pdf.addPage();
                    }
                }
            }
            pdf.save('resume.pdf');
        }
    });
}